name: CI - Build and Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'droe-*/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Build unified binary
      run: |
        cargo build --release
        echo "✅ Unified droe binary built successfully"
    
    - name: Test CLI functionality
      shell: bash
      run: |
        ./target/release/droe --version
        ./target/release/droe --help
        echo "✅ CLI smoke tests passed"
    
    - name: Upload development binary (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: droe-dev-linux
        path: target/release/droe
        retention-days: 7

  integration-test:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Download development binary
      uses: actions/download-artifact@v4
      with:
        name: droe-dev-linux
        path: ./
    
    - name: Make binary executable
      run: chmod +x droe
    
    - name: Test project initialization
      run: |
        ./droe init test-project default
        cd test-project
        echo 'display "Hello CI!"' > src/main.droe
        echo "✅ Project initialization test passed"
    
    - name: Test compilation
      run: |
        cd test-project
        ../droe compile src/main.droe --target wasm --output build/main.wasm
        echo "✅ Compilation test passed"