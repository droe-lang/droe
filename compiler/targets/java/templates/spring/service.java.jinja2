package {{ package_name }}.service;

import {{ package_name }}.entity.{{ entity_name }};
import {{ package_name }}.repository.{{ entity_name }}Repository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;
import java.util.Optional;

@Service
public class {{ service_name }} {

    @Autowired
    private {{ entity_name }}Repository {{ entity_name | lower }}Repository;

    // Find all {{ entity_name | lower }}s
    public List<{{ entity_name }}> findAll{{ entity_name }}s() {
        return {{ entity_name | lower }}Repository.findAll();
    }

    // Find {{ entity_name | lower }} by ID
    public {{ entity_name }} find{{ entity_name }}ById(Long id) {
        Optional<{{ entity_name }}> result = {{ entity_name | lower }}Repository.findById(id);
        return result.orElse(null);
    }

    // Find {{ entity_name | lower }} by ID (with Optional)
    public Optional<{{ entity_name }}> find{{ entity_name }}ByIdOptional(Long id) {
        return {{ entity_name | lower }}Repository.findById(id);
    }

    // Save {{ entity_name | lower }}
    public {{ entity_name }} save{{ entity_name }}({{ entity_name }} {{ entity_name | lower }}) {
        return {{ entity_name | lower }}Repository.save({{ entity_name | lower }});
    }

    {% if has_name_field %}
    // Find {{ entity_name | lower }} by name
    public {{ entity_name }} find{{ entity_name }}ByName(String name) {
        Optional<{{ entity_name }}> result = {{ entity_name | lower }}Repository.findByName(name);
        return result.orElse(null);
    }

    // Search {{ entity_name | lower }}s by name
    public List<{{ entity_name }}> search{{ entity_name }}sByName(String name) {
        return {{ entity_name | lower }}Repository.findByNameContainingIgnoreCase(name);
    }
    {% endif %}

    // Create new {{ entity_name | lower }}
    public {{ entity_name }} create{{ entity_name }}({% for field in create_fields %}{{ field.java_type }} {{ field.name }}{% if not loop.last %}, {% endif %}{% endfor %}) {
        {{ entity_name }} {{ entity_name | lower }} = new {{ entity_name }}();
        {% for field in create_fields %}
        {{ entity_name | lower }}.set{{ field.name | capitalize }}({{ field.name }});
        {% endfor %}
        return {{ entity_name | lower }}Repository.save({{ entity_name | lower }});
    }

    // Update {{ entity_name | lower }}
    public {{ entity_name }} update{{ entity_name }}(Long id, {% for field in update_fields %}{{ field.java_type }} {{ field.name }}{% if not loop.last %}, {% endif %}{% endfor %}) {
        Optional<{{ entity_name }}> result = {{ entity_name | lower }}Repository.findById(id);
        if (result.isPresent()) {
            {{ entity_name }} {{ entity_name | lower }} = result.get();
            {% for field in update_fields %}
            {{ entity_name | lower }}.set{{ field.name | capitalize }}({{ field.name }});
            {% endfor %}
            return {{ entity_name | lower }}Repository.save({{ entity_name | lower }});
        }
        return null;
    }

    // Delete {{ entity_name | lower }}
    public boolean delete{{ entity_name }}(Long id) {
        if ({{ entity_name | lower }}Repository.existsById(id)) {
            {{ entity_name | lower }}Repository.deleteById(id);
            return true;
        }
        return false;
    }

    {% if service_methods %}
    // Custom service methods
    {% for method in service_methods %}
    public {{ method.return_type }} {{ method.name }}({{ method.parameters }}) {
        {% for line in method.body %}
        {{ line }}
        {% endfor %}
    }
    {% endfor %}
    {% endif %}
}