package {{ package_name }}.entity;

import jakarta.persistence.*;
import org.hibernate.annotations.CreationTimestamp;
{% if has_decimal_fields %}
import java.math.BigDecimal;
{% endif %}
{% if has_date_fields %}
import java.time.LocalDateTime;
{% endif %}

@Entity
@Table(name = "{{ table_name }}")
public class {{ class_name }} {

    {% for field in fields %}
    {% if field.is_key %}
    {# Primary key field #}
    @Id
    {% if field.is_auto and field.java_type in ['Long', 'Integer'] %}
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    {% endif %}
    @Column(name = "{{ field.name }}"
        {%- if field.is_required and not field.is_auto %}, nullable = false{% endif %}
        {%- if field.is_unique %}, unique = true{% endif %})
    private {{ field.java_type }} {{ field.name }};

    {% else %}
    {# Regular field #}
    {% if field.roe_type == 'datetime' and field.is_auto %}
    @CreationTimestamp
    {% endif %}
    @Column(name = "{{ field.name }}"
        {%- if field.is_required %}, nullable = false{% endif %}
        {%- if field.is_unique %}, unique = true{% endif %})
    private {{ field.java_type }} {{ field.name }};

    {% endif %}
    {% endfor %}

    // Default constructor
    public {{ class_name }}() {}

    // Constructor with parameters
    public {{ class_name }}({% for field in fields %}{{ field.java_type }} {{ field.name }}{% if not loop.last %}, {% endif %}{% endfor %}) {
        {% for field in fields %}
        this.{{ field.name }} = {{ field.name }};
        {% endfor %}
    }

    // Getters and Setters
    {% for field in fields %}
    public {{ field.java_type }} get{{ field.name | capitalize }}() {
        return {{ field.name }};
    }

    public void set{{ field.name | capitalize }}({{ field.java_type }} {{ field.name }}) {
        this.{{ field.name }} = {{ field.name }};
    }

    {% endfor %}

    @Override
    public String toString() {
        return "{{ class_name }}{" +
                {% for field in fields %}
                {% if loop.first %}
                "{{ field.name }}=" + {{ field.name }} +
                {% else %}
                ", {{ field.name }}=" + {{ field.name }} +
                {% endif %}
                {% endfor %}
                '}';
    }
}