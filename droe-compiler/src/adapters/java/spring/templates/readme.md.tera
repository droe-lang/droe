# {{ app_name }} Spring Boot Application

This Spring Boot application was generated from Droe DSL.

## Features

- Spring Boot {{ spring_boot_version }}
- Spring Data JPA
- {% if database == "postgres" or database == "postgresql" %}PostgreSQL Database{% elif database == "mysql" %}MySQL Database{% else %}H2 In-Memory Database{% endif %}
- RESTful API endpoints
- Automatic database schema generation

## Project Structure

```
src/main/java/{{ package_name | replace(from=".", to="/") }}/
├── Application.java              # Main Spring Boot application class
├── entity/                       # JPA entities
├── repository/                   # Data access layer
├── service/                      # Business logic layer
└── controller/                   # REST API controllers
```

## Prerequisites

- Java {{ java_version }} or higher
- Maven 3.6+ 
{% if database == "postgres" or database == "postgresql" %}
- PostgreSQL database server
{% elif database == "mysql" %}
- MySQL database server
{% endif %}

## Configuration

Update `src/main/resources/application.properties` with your database configuration:

```properties
spring.datasource.url={{ database_url }}
spring.datasource.username={{ db_username }}
spring.datasource.password=your_password_here
```

## Running the Application

1. Build the project:
```bash
mvn clean install
```

2. Run the application:
```bash
mvn spring-boot:run
```

Or run the JAR file:
```bash
java -jar target/{{ artifact_id }}-1.0.0.jar
```

## Accessing the Application

- Application: http://localhost:8080
{% if database == "h2" %}
- H2 Console: http://localhost:8080/h2-console
  - JDBC URL: `{{ database_url }}`
  - Username: `{{ db_username }}`
  - Password: (leave empty)
{% endif %}

## API Documentation

The application exposes REST endpoints under `/api/` path.

## Development

This is a standard Maven Spring Boot project. You can:
- Import it into any Java IDE (IntelliJ IDEA, Eclipse, VS Code)
- Modify the generated classes
- Add additional dependencies to `pom.xml`
- Customize application properties

## Testing

Run tests with:
```bash
mvn test
```

## Building for Production

Create a production build:
```bash
mvn clean package -Pprod
```

## License

Generated by Droe compiler with Spring Boot framework support.